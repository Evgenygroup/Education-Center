Аспектно-ориентированное программирование ( AOP)
- предназначено для решения сковозных задач, которые могут представлять любой код,
многократно повторяющийся разными методами и который нельзя структурировать в отдельный модуль
Мы можем оставить это за пределами основного кода с его помощью

Advice - это дополнительная логика, код, который вызывается из точки соединения

Виды  Advice (советов)

1. Before  (перед)
2. After   (после)
3. After Returning ( после возврата)
4. After Throwing  (после бросания)
5. Around ( вокруг)

join point (точка соединения)-  точка в выполняемой программе( вызов метода, создание обьекта и т.д.), где следует применить совет
pointcut ( срез) - набор точек соединения. Он определяет подходит ли данная точка соединения к данному совету
aspect ( аспект) - класс, реализующий сквозную функциональность. Аспект изменяет поведение основного кода, применяя
                    совет в точках соединения, определенных срезом
introduction (внедрение) - изменение структуры класса для добавления функциональности аспекта в инородный код
target (цель) обьект, к которому будут применяться советы

AspectJ

Логгирование - процесс записи происходящих в коде событий. Каждая запись содержит дату, время, уровень события ,сообщение

Есть несколько уровней события
INFO -  обычно это информационные сообщения (записи в базу данных и т.д.)
WARN - предупреждения
ERROR - ошибки